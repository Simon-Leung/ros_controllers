#! /usr/bin/env python

##########################################################################
# Software License Agreement (BSD License)
#
#  Copyright (c) 2020, Exobotic
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above
#     copyright notice, this list of conditions and the following
#     disclaimer in the documentation and/or other materials provided
#     with the distribution.
#   * Neither the name of Exobotic nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
##########################################################################

import copy
from geometry_msgs.msg import Twist
from nav_msgs.msg import Odometry
import rospy as ros
import time

def odomCallback(odom):
	global last_x 
	last_x = odom.pose.pose.position.x

if __name__ == "__main__":

	global last_x
	last_x = 0
	ros.init_node("test_pub")
	pub = ros.Publisher("/swervebot/swerve_controller/cmd_vel", Twist, queue_size=1)
	sub = ros.Subscriber("/swervebot/swerve_controller/odom", Odometry, odomCallback)


	cmd_vel = Twist()
	cmd_vel.linear.x = 0.0
	cmd_vel.linear.y = 0.0
	cmd_vel.angular.z = 0.0

	prev_time = time.time()
	while (time.time() - prev_time < 0.1) and not ros.is_shutdown():
		cmd_vel.linear.x = 0.5
		pub.publish(cmd_vel)


	init_x = copy.copy(last_x)
	cmd_vel.linear.x = 0.5
	prev_time = time.time()
	while (time.time() - prev_time < 10) and not ros.is_shutdown():
		pub.publish(cmd_vel)

	cmd_vel.linear.x = 0.0
	prev_time = time.time()
	while (time.time() - prev_time < 0.1) and not ros.is_shutdown():
		cmd_vel.linear.x = 0.5
		pub.publish(cmd_vel)

	final_x = copy.copy(last_x)

	print "DIFF: " + str(final_x - init_x)
	print final_x, init_x


